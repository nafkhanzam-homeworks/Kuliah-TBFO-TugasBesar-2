# Starting Variable
S -> "import" Space Any Space "as" Space Any
Any -> "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
StringLiteral -> "\"" String "\"" | "\"\"\"" String "\"\"\"" | "'" String "'" | "'''" String "'''"
Space -> " " | " " Space
Spaco -> "" | Space

# Logical Operator
And -> Boolean " and " Boolean
Or -> Boolean " or " Boolean
Boolean -> "True" | "False" | And | Or | "(" Boolean ")"
Not -> "not " Boolean
Is -> Boolean " is " Boolean

# Array
Array -> "[" IsiArray "]"
IsiArray -> Object | Object Space "," Space IsiArray

Object -> String | Boolean | Number | Array

# Conditional
If -> "if " Spaco Boolean Spaco ":"
Elif -> "elif " Spaco Boolean Spaco ":"
Else -> "else" Spaco ":"

In -> Any " in " Array
Continue -> "continue"
Def -> "def " Spaco Function Spaco ":"
As -> "import " Any " as " Any
Import -> "import" Any

#
While -> "while " Boolean ":"
For -> "for " Spaco Any Spaco " in " Spaco Array | "for " Spaco Any Spaco " in " Spaco Function
With -> "with " Spaco Any Spaco " as " Spaco Any Spaco" :"


None -> "None"
Continue -> "continue"
Break -> "break"
Return -> "return " Any

# sisa class, from, continue
Pass -> "pass"
Raise -> "raise" Space Error
Error ->
Class -> "class" Space Any Space ":"