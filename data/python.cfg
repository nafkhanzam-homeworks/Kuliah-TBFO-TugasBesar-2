S -> BLOCK | S S

# SPACES
SPACE -> SPACE SPACE | NEWLINE | " "
NEWLINE -> NEWLINE NEWLINE | SPACO NEWLINE SPACO | "<br>"
_NEWLINE -> SPACO | NEWLINE
SPACO -> SPACE | ""

# BLOCKS
BLOCK -> SPACO BLOCK SPACO | IMPORT_BLOCK | DEF_BLOCK | BODY

# IMPORTS
IMPORT_BLOCK -> SINGLE_IMPORT SPACE "as" SPACE VAR | "from" SPACE VAR SPACE SINGLE_IMPORT
SINGLE_IMPORT -> "import" SPACE VAR

# DEF
DEF_BLOCK -> "def" SPACE VAR PARAMS_DEF _DEF_TYPE ":" _NEWLINE BODY
_DEF_TYPE -> SPACO "->" SPACO TYPE | ""
PARAMS_DEF -> "(" _PARAMS_DEF ")" | ""
_PARAMS_DEF -> "(" _PARAMS_DEF ")" | SPACO __PARAMS_DEF SPACO | _PARAMS_DEF "," _PARAMS_DEF | ""
__PARAMS_DEF -> VAR | VAR ":" SPACO TYPE

# BODY
BODY -> BODY BODY | LINE
LINE -> SPACO _LINE _NEWLINE
_LINE -> OBJECT | VAR SPACO "." CALL | ASSIGN | PASS | RETURN | CALL | ""
PASS -> "pass"
RETURN -> "return" SPACE OBJECT
CALL -> VAR _PARAMS
ASSIGN -> VAR SPACO ASSIGN_SIGN SPACO OBJECT
ASSIGN_SIGN -> "=" | ":="
PARAMS -> "(" _PARAMS ")" | ""
_PARAMS -> "(" _PARAMS ")" | _PARAMS "," _PARAMS | SPACO OBJECT SPACO | KWARG | ""
KWARG -> VAR SPACO "=" SPACO OBJECT

OBJECT -> VAR | BOOLEAN | STRING | INT | FLOAT | CALL | NONE
TYPE -> "dict" | "str" | "integer" | "float" | "list" | "tuple"
NONE -> "None"
STRING -> """ ANY """ | "'" ANY "'" | """"" ANY """"" | "'''" ANY "'''"
BOOLEAN -> "True" | "False" | VAR | BOOLEAN SPACO COMPAROR SPACO BOOLEAN
COMPAROR -> "==" | "is" | "or" | "and" | "||" | "&&" | "<" | ">" | "<=" | ">="

VAR -> CHAR _VAR
_VAR -> _VAR _VAR | CHAR | INT
ANY -> ANY ANY | CHAR | INT | SPACO
CHAR -> "_" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z" | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
INT -> "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
FLOAT -> INT "." INT | "." INT | INT "."

# LOOPS